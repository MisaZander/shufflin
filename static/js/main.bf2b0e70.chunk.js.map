{"version":3,"sources":["img sync /^/.*$","img/AAM.jpg","img/AngryDuck.jpg","img/ConfessionBear.jpg","img/DisasterGirl.jpg","img/EvilRacoon.jpg","img/ForeverAlone.jpg","img/Fry.jpg","img/MAM.jpg","img/Pepe.jpg","img/Seal.jpg","img/Steve.jpg","img/SuccessKid.jpg","components/Image.js","components/Footer.js","components/modals/Instructions.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["map","./AAM.jpg","./AngryDuck.jpg","./ConfessionBear.jpg","./DisasterGirl.jpg","./EvilRacoon.jpg","./ForeverAlone.jpg","./Fry.jpg","./MAM.jpg","./Pepe.jpg","./Seal.jpg","./Steve.jpg","./SuccessKid.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Image","props","react_default","a","createElement","src","alt","className","onClick","Footer","score","highScore","Instructions","tabIndex","role","type","data-dismiss","aria-label","aria-hidden","Page","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$state","state","images","newState","filter","image","clicked","alert","setState","randomize","stateCopy","i","length","element","splice","Math","floor","random","_this2","_this$state2","imgs","img","components_Image","key","require","style","color","data-toggle","data-target","href","target","rel","components_Footer","modals_Instructions","Component","App","components_Page","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf2b0e70.chunk.js","sourcesContent":["var map = {\n\t\"./AAM.jpg\": 18,\n\t\"./AngryDuck.jpg\": 19,\n\t\"./ConfessionBear.jpg\": 20,\n\t\"./DisasterGirl.jpg\": 21,\n\t\"./EvilRacoon.jpg\": 22,\n\t\"./ForeverAlone.jpg\": 23,\n\t\"./Fry.jpg\": 24,\n\t\"./MAM.jpg\": 25,\n\t\"./Pepe.jpg\": 26,\n\t\"./Seal.jpg\": 27,\n\t\"./Steve.jpg\": 28,\n\t\"./SuccessKid.jpg\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/AAM.0cfe8eed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AngryDuck.55a1bd41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ConfessionBear.506f0c78.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DisasterGirl.b6c588eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/EvilRacoon.eeadedb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ForeverAlone.64796f06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fry.893674d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MAM.00c99abb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pepe.eae9b394.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seal.ea2be24b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Steve.6560b98b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SuccessKid.2a35acbc.jpg\";","import React from \"react\";\n\nconst Image = props => {\n  return (\n    <img\n      src={props.src}\n      alt=\"\"\n      className=\"border border-dark rounded img-thumbnail m-3\"\n      onClick={() => props.onClick(props.id)}\n    />\n  );\n};\n\nexport default Image;\n","import React from \"react\";\n\nconst Footer = props => {\n  const { score, highScore } = props;\n  return (\n    <p className=\"lead text-center display-3\">\n      Score: {score}\n      {\" - \"}\n      High Score: {highScore}\n    </p>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Instructions = () => {\n  return (\n    <div className=\"modal fade\" id=\"instructions\" tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              How to Play\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <p>\n              Click each image on the screen exactly once. Each unique click\n              earns you one point. If you click the same image twice, it's game\n              over.\n            </p>\n            <p>It can't be that simple right? You'll see...</p>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              data-dismiss=\"modal\"\n            >\n              Okay, Got It!\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React, { Component } from \"react\";\nimport Image from \"./Image\";\nimport Footer from \"./Footer\";\nimport images from \"../images.json\";\n\n//Modals\nimport Instructions from \"./modals/Instructions\";\n\nclass Page extends Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      highScore: 0,\n      images\n    };\n  }\n\n  onClick = id => {\n    let { images, score, highScore } = this.state;\n    let newState = [];\n\n    //Obtain the element of the clicked image\n    let clickedImg = images.filter(image => image.id === id);\n\n    if (clickedImg[0].clicked) {\n      //Not unique, game over\n      //Reset all clicked states to false\n      newState = this.state.images.map(image => {\n        image.clicked = false;\n        return image;\n      });\n      score = 0;\n      alert(\"Game over!\");\n    } else {\n      //Unique click. +1\n      newState = this.state.images.map(image => {\n        if (image.id === id) {\n          image.clicked = !image.clicked;\n          //console.log(\"Id \" + image.id + \" is now \" + image.clicked);\n        }\n        return image;\n      });\n      score++;\n      if (score > highScore) highScore = score;\n      if (score === 12) {\n        alert(\"YOU'RE WINNER!\");\n        newState = this.state.images.map(image => {\n          image.clicked = false;\n          return image;\n        });\n        score = 0;\n      }\n    }\n    this.setState({ images: newState, score, highScore });\n    this.randomize();\n  };\n\n  componentDidMount() {\n    this.randomize();\n  }\n\n  randomize = () => {\n    let stateCopy = this.state.images;\n    let newState = [];\n    for (let i = 0; stateCopy.length > 0; i++) {\n      //Yank a random image out of the state. Splice returns an array.\n      let element = stateCopy.splice(\n        Math.floor(Math.random() * stateCopy.length),\n        1\n      );\n      newState[i] = element[0];\n    }\n    this.setState({ images: newState });\n  };\n\n  render() {\n    const { images, score, highScore } = this.state;\n    const imgs = images.map(img => (\n      <Image\n        key={img.id}\n        id={img.id}\n        src={require(\"../img/\" + img.src)}\n        onClick={this.onClick}\n      />\n    ));\n    return (\n      <div className=\"App\">\n        <header>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-12 text-center\">\n                  <h1 id=\"title\" className=\"navbar-brand mx-auto\">\n                    <i className=\"fab fa-react\" style={{ color: \"#00d8ff\" }} />{\" \"}\n                    React Clicky: Dank Memes Edition\n                  </h1>\n                </div>\n                <div className=\"w-100\" />\n                <div className=\"col-6\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary btn-block\"\n                    data-toggle=\"modal\"\n                    data-target=\"#instructions\"\n                  >\n                    How to Play\n                  </button>\n                </div>\n                <div className=\"col-6\">\n                  <a\n                    href=\"https://github.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <button className=\"btn btn-primary btn-block\">\n                      GitHub Repo\n                    </button>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </nav>\n        </header>\n        <main className=\"container text-center\">{imgs}</main>\n        <div className=\"placeholder\" />\n        <footer className=\"footer\">\n          <Footer score={score} highScore={highScore} />\n        </footer>\n        <Instructions />\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Page from \"./components/Page\";\n\nclass App extends Component {\n  render() {\n    return <Page />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}